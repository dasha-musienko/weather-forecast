{"mappings":"AAAA,MAAMA,EAAO,CACXC,UAAWC,SAASC,cAAc,cAClCC,UAAWF,SAASC,cAAc,eAClCE,YAAaH,SAASC,cAAc,iCACpCG,cAAeJ,SAASC,cAAc,+BACtCI,YAAaL,SAASC,cAAc,sBACpCK,cAAeN,SAASC,cAAc,wBACtCM,MAAOP,SAASC,cAAc,qBAC9BO,aAAcR,SAASC,cAAc,2BACrCQ,YAAaT,SAASC,cAAc,2BACpCS,eAAgBV,SAASC,cAAc,8BACvCU,YAAaX,SAASC,cAAc,2BACpCW,eAAgBZ,SAASC,cAAc,sBACvCY,aAAcb,SAASC,cAAc,sBACrCa,gBAAiBd,SAASC,cAAc,yBACxCc,YAAaf,SAASC,cAAc,kBACpCe,YAAahB,SAASC,cAAc,kBACpCgB,eAAgBjB,SAASC,cAAc,sBACvCiB,eAAgBlB,SAASC,cAAc,sBACvCkB,cAAenB,SAASoB,iBAAiB,mBAGrCC,EAAa,CACjBC,KAAM,IAGRxB,EAAKC,UAAUwB,iBAAiB,SAGhC,SAA0BC,GACxBH,EAAWC,KAAOE,EAAEC,cAAcC,MAAMC,a,IAH1C7B,EAAKI,UAAUqB,iBAAiB,SAMhC,YAQsBD,EAPPD,EAAWC,KAQxBM,QAAQC,IAAIP,GACZQ,SAAW,gCACXC,QAAU,kCAEHC,MAAM,GAAGF,6BAA6BC,aAAaT,KAAQW,MAChEC,IACE,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,MAAM,KAjBQL,MAAKM,IAsBrC,IAAsBC,EArBlBZ,QAAQC,IAAIU,GAqBMC,EAnBLD,EAoBfzC,EAAKK,YAAYsC,UAAYD,EAAIE,QAAQC,OACzC7C,EAAKM,cAAcqC,UAAYD,EAAIE,QAAQE,YAC3C9C,EAAKO,YAAYoC,UAAYD,EAAIE,QAAQG,MACzC/C,EAAKQ,cAAcmC,UAAYD,EAAIE,QAAQI,SAC3ChD,EAAKS,MAAMkC,UAAYD,EAAIE,QAAQK,GACnCjD,EAAKU,aAAaiC,UAAYD,EAAIE,QAAQM,UAAUC,KACpDnD,EAAKW,YAAYgC,UAAYD,EAAIU,SAASC,KAC1CrD,EAAKY,eAAe+B,UAAYD,EAAIU,SAASE,QAC7CtD,EAAKa,YAAY8B,UAAYD,EAAIU,SAASG,UAC1CvD,EAAKc,eAAe6B,UAAYD,EAAIE,QAAQY,SAC5CxD,EAAKe,aAAa4B,UAAYD,EAAIE,QAAQa,SAC1CzD,EAAKgB,gBAAgB2B,UAAYD,EAAIE,QAAQc,YAC7C1D,EAAKiB,YAAY0B,UACfD,EAAIiB,SAASC,YAAY,GAAGC,IAAIC,qBAClC9D,EAAKkB,YAAYyB,UACfD,EAAIiB,SAASC,YAAY,GAAGC,IAAIE,qBAClC/D,EAAKmB,eAAewB,UAAYD,EAAIiB,SAASC,YAAY,GAAGC,IAAIG,UAChEhE,EAAKoB,eAAeuB,UAAYD,EAAIiB,SAASC,YAAY,GAAGC,IAAII,UAChE,IAAIjE,EAAKqB,eAAe6C,KAAI,CAACC,EAAIC,KAC/BD,EAAGhE,cAAc,mBAAmBwC,UAClCD,EAAIiB,SAASC,YAAY,GAAGS,KAAiB,GAAXD,EAAM,IAAQE,KAAKC,MAAM,KAAK,GAClEJ,EAAGhE,cAAc,iCAAiCwC,UAChDD,EAAIiB,SAASC,YAAY,GAAGS,KAAiB,GAAXD,EAAM,IAAQvB,OAClDsB,EAAGhE,cAAc,yBAAyBwC,UACxCD,EAAIiB,SAASC,YAAY,GAAGS,KAAiB,GAAXD,EAAM,IAAQX,QAAQ,GA5CxC,IAItB,IAAsBjC,C","sources":["src/js/script.js"],"sourcesContent":["const refs = {\n  cityInput: document.querySelector('.geo-input'),\n  searchBtn: document.querySelector('.search-btn'),\n  currentTemp: document.querySelector('.day-stats__temperature-value'),\n  feelslikeTemp: document.querySelector('.day-stats__feelslike-value'),\n  cloudsValue: document.querySelector('.day-stats__clouds'),\n  humidityValue: document.querySelector('.day-stats__humidity'),\n  uvIdx: document.querySelector('.uv-header__value'),\n  weatherTitle: document.querySelector('.weather__primary-title'),\n  weatherCity: document.querySelector('.weather__location-city'),\n  weatherCountry: document.querySelector('.weather__location-country'),\n  weatherDate: document.querySelector('.weather__location-date'),\n  weatherWindDir: document.querySelector('.weather__wind-dir'),\n  weatherSpeed: document.querySelector('.weather__wind-kph'),\n  weatherPressure: document.querySelector('.weather__pressure-mb'),\n  weatherRain: document.querySelector('.weather__rain'),\n  weatherSnow: document.querySelector('.weather__snow'),\n  weatherMaxTemp: document.querySelector('.weather__max-temp'),\n  weatherMinTemp: document.querySelector('.weather__min-temp'),\n  forecastItems: document.querySelectorAll('.forecast-item'),\n};\n\nconst tempValues = {\n  city: '',\n};\n\nrefs.cityInput.addEventListener('input', cityInputHandler);\nrefs.searchBtn.addEventListener('click', searchBtnClickHandler);\n\nfunction cityInputHandler(e) {\n  tempValues.city = e.currentTarget.value.toLowerCase();\n}\n\nfunction searchBtnClickHandler() {\n  fetchWeather(tempValues.city).then(data => {\n    console.log(data);\n\n    createMarkup(data);\n  });\n}\n\nfunction fetchWeather(city) {\n  console.log(city);\n  BASE_URL = 'http://api.weatherapi.com/v1/';\n  API_KEY = '6f3bf7a06a84400a8c1181835232108';\n\n  return fetch(`${BASE_URL}forecast.json?key=${API_KEY}&q=${city}`).then(\n    resp => {\n      if (!resp.ok) {\n        throw new Error(resp.statusText);\n      }\n      return resp.json();\n    }\n  );\n}\n\nfunction createMarkup(obj) {\n  refs.currentTemp.innerHTML = obj.current.temp_c;\n  refs.feelslikeTemp.innerHTML = obj.current.feelslike_c;\n  refs.cloudsValue.innerHTML = obj.current.cloud;\n  refs.humidityValue.innerHTML = obj.current.humidity;\n  refs.uvIdx.innerHTML = obj.current.uv;\n  refs.weatherTitle.innerHTML = obj.current.condition.text;\n  refs.weatherCity.innerHTML = obj.location.name;\n  refs.weatherCountry.innerHTML = obj.location.country;\n  refs.weatherDate.innerHTML = obj.location.localtime;\n  refs.weatherWindDir.innerHTML = obj.current.wind_dir;\n  refs.weatherSpeed.innerHTML = obj.current.wind_kph;\n  refs.weatherPressure.innerHTML = obj.current.pressure_mb;\n  refs.weatherRain.innerHTML =\n    obj.forecast.forecastday[0].day.daily_chance_of_rain;\n  refs.weatherSnow.innerHTML =\n    obj.forecast.forecastday[0].day.daily_chance_of_snow;\n  refs.weatherMaxTemp.innerHTML = obj.forecast.forecastday[0].day.maxtemp_c;\n  refs.weatherMinTemp.innerHTML = obj.forecast.forecastday[0].day.mintemp_c;\n  [...refs.forecastItems].map((el, idx) => {\n    el.querySelector('.forecast__time').innerHTML =\n      obj.forecast.forecastday[0].hour[(idx + 1) * 2].time.split(' ')[1];\n    el.querySelector('.forecast__temperature--value').innerHTML =\n      obj.forecast.forecastday[0].hour[(idx + 1) * 2].temp_c;\n    el.querySelector('.forecast__wind-value').innerHTML =\n      obj.forecast.forecastday[0].hour[(idx + 1) * 2].wind_kph;\n  });\n}\n"],"names":["$1ee2b6306238ec66$var$refs","cityInput","document","querySelector","searchBtn","currentTemp","feelslikeTemp","cloudsValue","humidityValue","uvIdx","weatherTitle","weatherCity","weatherCountry","weatherDate","weatherWindDir","weatherSpeed","weatherPressure","weatherRain","weatherSnow","weatherMaxTemp","weatherMinTemp","forecastItems","querySelectorAll","$1ee2b6306238ec66$var$tempValues","city","addEventListener","e","currentTarget","value","toLowerCase","console","log","BASE_URL","API_KEY","fetch","then","resp","ok","Error","statusText","json","data","obj","innerHTML","current","temp_c","feelslike_c","cloud","humidity","uv","condition","text","location","name","country","localtime","wind_dir","wind_kph","pressure_mb","forecast","forecastday","day","daily_chance_of_rain","daily_chance_of_snow","maxtemp_c","mintemp_c","map","el","idx","hour","time","split"],"version":3,"file":"index.c81aa9dd.js.map"}